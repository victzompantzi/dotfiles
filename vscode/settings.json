{
  "[c]": {
    "editor.defaultFormatter": "ms-vscode.cpptools"
  },
  "[csharp]": {
    "editor.defaultFormatter": "csharpier.csharpier-vscode"
  },
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "[ignore]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "[javascript]": {
    "editor.maxTokenizationLineLength": 2500
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[lua]": {
    "editor.defaultFormatter": "sumneko.lua"
  },
  "[mysql]": {
    "editor.defaultFormatter": "inferrinizzard.prettier-sql-vscode"
  },
  "[powershell]": {
    "editor.defaultFormatter": "ms-vscode.powershell"
  },
  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter"
  },
  "[shellscript]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "[sql]": {
    "editor.defaultFormatter": "adpyke.vscode-sql-formatter"
  },
  "accessibility.signals.terminalBell": {
    "sound": "on"
  },
  "activePositions.autorefresh": true,
  "allowSyntheticDefaultImports": "",
  "auto-rename-tag.activationOnLanguage": ["html", "xml", "php", "javascript"],
  "autoCommentNextLine.list": [
    {
      "char": "//",
      "languages": [
        "php",
        "javascript",
        "typescript",
        "jsonc",
        "scss",
        "sass",
        "json",
        "vue",
        "markdown",
        "javascriptreact",
        "typescriptreact"
      ]
    },
    {
      "char": "#",
      "languages": ["python", "ruby"]
    }
  ],
  // Better Comments
  "better-comments.multilineComments": true,
  "better-comments.tags": [
    {
      "backgroundColor": "transparent",
      "bold": false,
      "color": "#FF2D00",
      "italic": false,
      "strikethrough": false,
      "tag": "!",
      "underline": false
    },
    {
      "backgroundColor": "transparent",
      "color": "#3498DB",
      "italic": false,
      "strikethrough": false,
      "tag": "?",
      "underline": false
    },
    {
      "backgroundColor": "transparent",
      "bold": false,
      "color": "#474747",
      "italic": false,
      "strikethrough": true,
      "tag": "//",
      "underline": false
    },
    {
      "backgroundColor": "transparent",
      "bold": false,
      "color": "#FF8C00",
      "italic": false,
      "strikethrough": false,
      "tag": "todo",
      "underline": false
    },
    {
      "backgroundColor": "transparent",
      "bold": false,
      "color": "#98C379",
      "italic": false,
      "strikethrough": false,
      "tag": "*",
      "underline": false
    }
  ],
  "cSpell.enableFiletypes": ["!c"],
  "cSpell.ignoreWords": ["vhtc"],
  "cSpell.language": "en,es",
  "cSpell.userWords": [
    "CDMX",
    "Contáctanos",
    "Cuauhtémoc",
    "dotnet",
    "indenticator",
    "mayoreo",
    "Obregón",
    "Poniatowska",
    "Suscríbete"
  ],
  "clangd.checkUpdates": true,
  "clangd.path": "C:\\clang+llvm-18.1.8-x86_64-pc-windows-msvc\\bin\\clangd.exe",
  "cloudcode.autoDependencies": "off",
  "cmake.configureOnOpen": true,
  "cmake.options.statusBarVisibility": "compact",
  "cmake.pinnedCommands": [
    "workbench.action.tasks.configureTaskRunner",
    "workbench.action.tasks.runTask"
  ],
  "cmake.showOptionsMovedNotification": false,
  "codestream.serverUrl": "https://codestream-us1.service.newrelic.com",
  "commentTranslate.targetLanguage": "es",
  "debug.onTaskErrors": "debugAnyway",
  "debug.openDebug": "neverOpen",
  "debug.showBreakpointsInOverviewRuler": true,
  "deepl.formality": "default",
  "deepl.splitSentences": "1",
  "deepl.tagHandling": "off",
  "deepl.translationMode": "Replace",
  "diffEditor.ignoreTrimWhitespace": false,
  "diffEditor.maxComputationTime": 0,
  "diffEditor.renderIndicators": true,
  "dotnet.preferRuntimeFromSDK": true,
  // Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.
  "editor.acceptSuggestionOnCommitCharacter": true,
  // Controls if suggestions should be accepted on 'Enter' - in addition to 'Tab'. Helps to avoid ambiguity between inserting new lines or accepting suggestions. The value 'smart' means only accept a suggestion with Enter when it makes a textual change
  "editor.acceptSuggestionOnEnter": "on",
  "editor.accessibilitySupport": "off",
  "editor.autoClosingBrackets": "always",
  "editor.codeActionsOnSave": {
    // TODO: check other options
    "source.fixAll.eslint": "always"
  },
  "editor.cursorBlinking": "phase",
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.cursorWidth": 4,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.fontFamily": "Hack Nerd Font Mono",
  "editor.fontLigatures": true,
  "editor.fontSize": 17,
  "editor.fontWeight": "600",
  "editor.formatOnPaste": true,
  "editor.formatOnSave": true,
  "editor.formatOnType": true,
  "editor.glyphMargin": true,
  "editor.guides.bracketPairs": true,
  "editor.highlightActivateIndentGuide": true,
  "editor.letterSpacing": 0.5,
  "editor.lineHeight": 1.5,
  "editor.lineNumbers": "relative",
  "editor.linkedEditing": true,
  "editor.matchBrackets": "always",
  "editor.minimap.autohide": true,
  "editor.minimap.maxColumn": 120,
  "editor.minimap.showSlider": "always",
  "editor.mouseWheelZoom": true,
  "editor.overviewRulerBorder": false,
  // Enable parameter hints
  "editor.parameterHints.enabled": true,
  // Controls if quick suggestions should show up while typing
  "editor.quickSuggestions": {
    "comments": false,
    "other": true,
    "strings": false
  },
  // Controls the delay in ms after which quick suggestions will show up.
  "editor.quickSuggestionsDelay": 10,
  "editor.renderWhitespace": "all",
  "editor.scrollbar.vertical": "visible",
  "editor.scrollbar.verticalScrollbarSize": 10,
  "editor.semanticHighlighting.enabled": "configuredByTheme",
  "editor.snippetSuggestions": "top",
  "editor.stickyScroll.enabled": true,
  // Controls whether sorting favours words that appear close to the cursor
  "editor.suggest.localityBonus": true,
  "editor.suggest.showStatusBar": true,
  // Controls if suggestions should automatically show up when typing trigger characters
  "editor.suggestOnTriggerCharacters": true,
  // Controls how suggestions are pre-selected when showing the suggest list
  "editor.suggestSelection": "first",
  // Controls if pressing tab inserts the best suggestion and if tab cycles through other suggestions
  "editor.tabCompletion": "on",
  "editor.tabSize": 2,
  // Enable word based suggestions
  "editor.wordBasedSuggestions": "matchingDocuments",
  "editor.wordSeparators": "`~!@#%^&*()-=+[{]}\\|;:'\",.<>/?",
  "editor.wordWrap": "on",
  "eslint.enable": true,
  "eslint.run": "onType",
  "explorer.confirmDragAndDrop": false,
  "explorer.fileNesting.patterns": {
    "*.db": "${capture}.${extname}-*",
    "*.db3": "${capture}.${extname}-*",
    "*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
    "*.jsx": "${capture}.js",
    "*.s3db": "${capture}.${extname}-*",
    "*.sdb": "${capture}.${extname}-*",
    "*.sqlite": "${capture}.${extname}-*",
    "*.sqlite3": "${capture}.${extname}-*",
    "*.ts": "${capture}.js",
    "*.tsx": "${capture}.ts",
    "package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml, bun.lockb",
    "tsconfig.json": "tsconfig.*.json"
  },
  "extensions.experimental.affinity": {
    "asvetliakov.vscode-neovim": 1,
    "vscodevim.vim": 1
  },
  "extensiontotal.apiKeySetting": "xtotal3a5336b6831a45679b4d6543735c4285",
  // To improve performance
  "files.associations": {
    "*.c": "c",
    "*.js": "javascript",
    ".batrc": "plaintext"
  },
  "files.autoGuessEncoding": true,
  "files.autoSave": "afterDelay",
  "files.autoSaveDelay": 4000,
  "files.defaultLanguage": "${activeEditorLanguage}",
  "files.encoding": "utf8",
  "files.eol": "\r\n",
  "files.trimFinalNewlines": true,
  "files.trimTrailingWhitespace": true,
  "git.autofetch": true,
  "git.openRepositoryInParentFolders": "never",
  "github.copilot.enable": {
    "*": false,
    "markdown": false,
    "plaintext": false,
    "scminput": false
  },
  "gitlens.mode.active": "zen",
  // SOP's highlight matching tag setting.
  "highlight-matching-tag.styles": {
    "opening": {
      "full": {
        "highlight": "rgba(165, 153, 233, 0.3)"
      }
    }
  },
  // For which languages indent-rainbow should be deactivated (if empty it means none).
  "indentRainbow.excludedLanguages": ["plaintext"],
  // The delay in ms until the editor gets updated.
  "indentRainbow.updateDelay": 100, // 10 makes it super fast but may cost more resources
  "indenticator.color.dark": "rgba(255,255,255,0.1)",
  "indenticator.inner.color.dark": "#ff00ff",
  "indenticator.inner.showIndentGuide": true,
  "indenticator.showHover": true,
  "indenticator.width": 0.1,
  "js/ts.implicitProjectConfig.checkJs": true,
  "launch": {
    "configurations": []
  },
  "liveServer.settings.donotShowInfoMsg": true,
  "obsidian-md-vsc.defaultNote": "Computer Science\\VSCode\\projects",
  "obsidian-md-vsc.defaultVault": "Obsidian Vault",
  "obsidian-md-vsc.defaultVaultPath": "C:\\Users\\vhtc8\\OneDrive\\OneSyncFiles\\Obsidian Vault",
  "peacock.favoriteColors": [
    {
      "name": "Angular Red",
      "value": "#dd0531"
    },
    {
      "name": "Azure Blue",
      "value": "#007fff"
    },
    {
      "name": "JavaScript Yellow",
      "value": "#f9e64f"
    },
    {
      "name": "Mandalorian Blue",
      "value": "#1857a4"
    },
    {
      "name": "Node Green",
      "value": "#215732"
    },
    {
      "name": "React Blue",
      "value": "#61dafb"
    },
    {
      "name": "Something Different",
      "value": "#832561"
    },
    {
      "name": "Svelte Orange",
      "value": "#ff3d00"
    },
    {
      "name": "Vue Green",
      "value": "#42b883"
    }
  ],
  "powershell.integratedConsole.showOnStartup": false,
  "powershell.integratedConsole.suppressStartupBanner": true,
  "prettier.endOfLine": "auto",
  "prettier.eslintIntegration": true,
  "projectManager.git.baseFolders": ["C:\\Users\\vhtc8\\OneDrive\\projects"],
  "projectManager.hg.baseFolders": ["C:\\Users\\vhtc8\\projects"],
  "projectManager.sortList": "Recent",
  "python.defaultInterpreterPath": "C:\\Users\\vhtc8\\AppData\\Local\\Programs\\Python\\Python312\\python.exe",
  "redhat.telemetry.enabled": false,
  "remote.autoForwardPortsSource": "output",
  "saveFile": [
    "src.remember",
    "workbench.action.files.save",
    {
      "args": {
        "delay": 1000 // change according to your need
      },
      "command": "$delay"
    },
    "src.restore"
  ],
  "scm.experimental.showHistoryGraph": true,
  "security.allowedUNCHosts": ["wsl.localhost"],
  "security.promptForLocalFileProtocolHandling": false,
  "security.workspace.trust.untrustedFiles": "open",
  "subtleBrackets.pairs": [
    {
      "close": ")",
      "open": "("
    },
    {
      "close": "]",
      "open": "["
    },
    {
      "bold": false,
      "close": "}",
      "open": "{"
    }
  ],
  "subtleBrackets.style": {
    "borderStyle": "none none solid none",
    "borderWidth": "1px"
  },
  "tabnine.experimentalAutoImports": true,
  "terminal.integrated.defaultProfile.windows": "PowerShell",
  "terminal.integrated.enablePersistentSessions": false,
  "terminal.integrated.enableVisualBell": true,
  "terminal.integrated.fontFamily": "Hack Nerd Font Mono",
  "terminal.integrated.gpuAcceleration": "on",
  "terminal.integrated.hideOnStartup": "always",
  "typescript.tsserver.log": "off",
  "update.mode": "start",
  "vim.easymotion": true,
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-f>": false
  },
  "vim.hlsearch": true,
  "vim.incsearch": true,
  "vim.insertModeKeyBindings": [
    {
      "after": ["<Esc>"],
      "before": ["j", "j"]
    }
  ],
  "vim.leader": "<space>",
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": ["whichkey.show"]
    },
    {
      "after": ["d", "d"],
      "before": ["<leader>", "d"]
    },
    {
      "before": ["<C-n>"],
      "commands": [":nohl"]
    },
    {
      "before": ["K"],
      "commands": ["lineBreakInsert"],
      "silent": true
    }
  ],
  "vim.smartRelativeLine": true,
  "vim.useCtrlKeys": true,
  "vim.useSystemClipboard": true,
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": ["vspacecode.space"]
    },
    {
      "before": ["<space>"],
      "commands": ["whichkey.show"]
    },
    {
      "before": [","],
      "commands": [
        "vspacecode.space",
        {
          "args": "m",
          "command": "whichkey.triggerKey"
        }
      ]
    },
    {
      "before": [">"],
      "commands": ["editor.action.indentLines"]
    },
    {
      "before": ["<"],
      "commands": ["editor.action.outdentLines"]
    }
  ],
  "vscode-neovim.compositeKeys": {},
  "vscode-neovim.highlightGroups.highlights": {
    "CurSearch": {
      "backgroundColor": "theme.editor.findMatchBackground"
    },
    "IncSearch": {
      "backgroundColor": "theme.editor.findMatchBackground"
    },
    "Search": {
      "backgroundColor": "theme.editor.findMatchHighlightBackground"
    },
    "Substitute": {
      "backgroundColor": "theme.editor.foreground",
      "color": "theme.editor.background"
    }
  },
  "vscode-neovim.neovimClean": false,
  "vscode-neovim.neovimExecutablePaths.win32": "C:\\Users\\vhtc8\\scoop\\shims\\nvim.exe",
  "vscode-neovim.revealCursorScrollLine": true,
  "window.titleBarStyle": "custom",
  "workbench.colorTheme": "Rosé Pine Moon",
  "workbench.editor.empty.hint": "hidden",
  "workbench.editor.showTabs": "single",
  "workbench.experimental.enableNewProfilesUI": true,
  "workbench.iconTheme": "catppuccin-mocha",
  "workbench.preferredDarkColorTheme": "Tokyo Night",
  "workbench.productIconTheme": "fluent-icons",
  "workbench.settings.applyToAllProfiles": [
    "editor.suggest.showStatusBar",
    "editor.fontFamily"
  ],
  "workbench.startupEditor": "welcomePageInEmptyWorkbench",
  "C_Cpp.intelliSenseEngine": "disabled"
}
